/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'

    // Add modern (JDK9+) FX support
    id 'org.openjfx.javafxplugin' version '0.0.9'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()

    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Add all FX natives (windows, macos, linux)

    compile "org.openjfx:javafx-base:11:win"
    compile "org.openjfx:javafx-graphics:11:win"
    compile "org.openjfx:javafx-controls:11:win"
    compile "org.openjfx:javafx-web:11:win"

    compile "org.openjfx:javafx-base:11:mac"
    compile "org.openjfx:javafx-graphics:11:mac"
    compile "org.openjfx:javafx-controls:11:mac"
    compile "org.openjfx:javafx-web:11:mac"

    compile "org.openjfx:javafx-base:11:linux"
    compile "org.openjfx:javafx-graphics:11:linux"
    compile "org.openjfx:javafx-controls:11:linux"
    compile "org.openjfx:javafx-web:11:linux"

    // Rich text exitor used in "source" tab
    compile group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.10.5'


}

javafx {
    version = '11'
    modules = [
        'javafx.controls', 'javafx.base',
        'javafx.graphics', 'javafx.web',
    ]
}

application {
    // Define the main class for the application.
    mainClass = 'plantuml.tool.App'
}

sourceCompatibility = 11
targetCompatibility = 11

jar {
  manifest {
    attributes 'Main-Class': application.mainClass

  }
  from {
    configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
  }
}


tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}


